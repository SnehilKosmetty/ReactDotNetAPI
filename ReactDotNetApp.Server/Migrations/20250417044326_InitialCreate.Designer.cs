// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactDotNetApp.Server.Data;

#nullable disable

namespace ReactDotNetApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250417044326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReactDotNetApp.Server.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 4, 17, 4, 43, 26, 386, DateTimeKind.Utc).AddTicks(967),
                            InStock = true,
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Clothing",
                            CreatedAt = new DateTime(2025, 4, 17, 4, 43, 26, 386, DateTimeKind.Utc).AddTicks(970),
                            InStock = true,
                            Name = "T-Shirt",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Home",
                            CreatedAt = new DateTime(2025, 4, 17, 4, 43, 26, 386, DateTimeKind.Utc).AddTicks(971),
                            InStock = false,
                            Name = "Coffee Maker",
                            Price = 89.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
